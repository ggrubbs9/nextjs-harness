pipeline:
  name: Dev Build Pipeline
  identifier: Dev_Build_Pipeline
  projectIdentifier: default_project
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: git_connector
        build: <+input>
  stages:
    - stage:
        name: build
        identifier: build
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          caching:
            enabled: false
            override: true
            paths: []
          buildIntelligence:
            enabled: false
          platform:
            os: Linux
            arch: Arm64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: Run
                  name: Install
                  identifier: GoInstallBuildTest
                  spec:
                    shell: Sh
                    command: npm i
                  description: Run install, build, test tasks
              - step:
                  type: Run
                  name: Run tests
                  identifier: Run_tests
                  spec:
                    shell: Sh
                    command: |-
                      - step:
                                        type: Run
                                        name: run pytest # Specify a name for the step.
                                        identifier: run_pytest # Define a step ID, usually based on the name.
                                        spec:
                                          connectorRef: YOUR_IMAGE_REGISTRY_CONNECTOR 
                                          image: python:latest # Specify an image, if required.
                                          shell: Sh
                                          command: |- # Provide your commands
                                            pytest test_main.py --junit-xml=output-test.xml
